namespace TechShop
{
        public class TechShopUI
        {
            private ICustomerDAO customerDAO = new CustomerDAOImpl();
            private IProductDAO productDAO = new ProductDAOImpl();
            private IInventoryDAO inventoryDAO = new InventoryDAOImpl();
            private IOrderDAO orderDAO = new OrderDAOImpl();
            IPaymentDAO paymentDAO = new PaymentDAOImpl();
            private IOrderDetailDAO orderDetailDAO = new OrderDetailDAOImpl();

            public void ShowMainMenu()
            {
                int choice = -1;
                do
                {
                    Console.WriteLine("\n========= TECHSHOP MAIN MENU =========");
                    Console.WriteLine("1. Customer Management");
                    Console.WriteLine("2. Product Management");
                    Console.WriteLine("3. Inventory Management");
                    Console.WriteLine("4. Order Management");
                    Console.WriteLine("5. Order Detail Management");
                    Console.WriteLine("6. Payment Management");
                    Console.WriteLine("7. Exit");
                    Console.Write("Enter your choice: ");
                    choice = Convert.ToInt32(Console.ReadLine());

                    switch (choice)
                    {
                        case 1:
                            ShowCustomerMenu();
                            break;
                        case 2:
                            ShowProductMenu();
                            break;
                        case 3:
                            ShowInventoryMenu();
                            break;
                        case 4:
                            ShowOrderMenu();
                            break;
                        case 5:
                            ShowOrderDetailMenu();
                            break;
                        case 6:
                            ShowPaymentMenu();
                            break;
                        case 7:
                            Console.WriteLine("Exiting the system...");
                            break;
                        default:
                            Console.WriteLine("Invalid choice.");
                            break;
                    }

                } while (choice != 7);
            }

            private void ShowCustomerMenu()
            {
                int choice = -1;
                do
                {
                    Console.WriteLine("\n----- Customer Management -----");
                    Console.WriteLine("1. Add Customer");
                    Console.WriteLine("2. Update Customer");
                    Console.WriteLine("3. Delete Customer");
                    Console.WriteLine("4. View Customer by ID");
                    Console.WriteLine("5. View All Customers");
                    Console.WriteLine("6. Back to Main Menu");
                    Console.Write("Choose an option: ");
                    choice = Convert.ToInt32(Console.ReadLine());

                    try
                    {
                        switch (choice)
                        {
                            case 1:
                                AddCustomer();
                                break;
                            case 2:
                                UpdateCustomer();
                                break;
                            case 3:
                                DeleteCustomer();
                                break;
                            case 4:
                                ViewCustomerById();
                                break;
                            case 5:
                                ViewAllCustomers();
                                break;
                            case 6:
                                Console.WriteLine("Returning to main menu...");
                                break;
                            default:
                                Console.WriteLine("Invalid choice.");
                                break;
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine("Error: " + ex.Message);
                    }

                } while (choice != 6);
            }

            private void AddCustomer()
            {
                Console.Write("Enter ID: ");
                int id = Convert.ToInt32(Console.ReadLine());
                Console.Write("Enter First Name: ");
                string fname = Console.ReadLine();
                Console.Write("Enter Last Name: ");
                string lname = Console.ReadLine();
                Console.Write("Enter Email: ");
                string email = Console.ReadLine();
                Console.Write("Enter Phone: ");
                string phone = Console.ReadLine();
                Console.Write("Enter Address: ");
                string address = Console.ReadLine();

                Customer c = new Customer(id, fname, lname, email, phone, address);
                customerDAO.AddCustomer(c);
            }

            private void UpdateCustomer()
            {
                Console.Write("Enter ID to update: ");
                int updateId = Convert.ToInt32(Console.ReadLine());
                Console.Write("Enter new Email: ");
                string newEmail = Console.ReadLine();
                Console.Write("Enter new Phone: ");
                string newPhone = Console.ReadLine();
                Console.Write("Enter new Address: ");
                string newAddress = Console.ReadLine();
                customerDAO.UpdateCustomer(updateId, newEmail, newPhone, newAddress);
            }

            private void DeleteCustomer()
            {
                Console.Write("Enter ID to delete: ");
                int delId = Convert.ToInt32(Console.ReadLine());
                customerDAO.DeleteCustomer(delId);
            }

            private void ViewCustomerById()
            {
                Console.Write("Enter ID to view: ");
                int viewId = Convert.ToInt32(Console.ReadLine());
                Customer found = customerDAO.GetCustomerById(viewId);
                found.GetCustomerDetails();
            }

            private void ViewAllCustomers()
            {
                List<Customer> all = customerDAO.GetAllCustomers();
                foreach (Customer cust in all)
                {
                    cust.GetCustomerDetails();
                }
            }

            private void ShowProductMenu()
            {
                int choice = -1;
                do
                {
                    Console.WriteLine("\n----- Product Management -----");
                    Console.WriteLine("1. Add Product");
                    Console.WriteLine("2. Update Product");
                    Console.WriteLine("3. Delete Product");
                    Console.WriteLine("4. View Product by ID");
                    Console.WriteLine("5. View All Products");
                    Console.WriteLine("6. Back to Main Menu");
                    Console.Write("Choose an option: ");
                    choice = Convert.ToInt32(Console.ReadLine());

                    try
                    {
                        switch (choice)
                        {
                            case 1:
                                AddProduct();
                                break;
                            case 2:
                                UpdateProduct();
                                break;
                            case 3:
                                DeleteProduct();
                                break;
                            case 4:
                                ViewProductById();
                                break;
                            case 5:
                                ViewAllProducts();
                                break;
                            case 6:
                                Console.WriteLine("Returning to main menu...");
                                break;
                            default:
                                Console.WriteLine("Invalid choice.");
                                break;
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine("Error: " + ex.Message);
                    }

                } while (choice != 6);
            }

            private void AddProduct()
            {
                Console.Write("Enter Product ID: ");
                int id = Convert.ToInt32(Console.ReadLine());
                Console.Write("Enter Product Name: ");
                string name = Console.ReadLine();
                Console.Write("Enter Description: ");
                string desc = Console.ReadLine();
                Console.Write("Enter Price: ");
                decimal price = Convert.ToDecimal(Console.ReadLine());

                Product p = new Product(id, name, desc, price);
                productDAO.AddProduct(p);
            }

            private void UpdateProduct()
            {
                Console.Write("Enter Product ID to update: ");
                int pid = Convert.ToInt32(Console.ReadLine());
                Console.Write("Enter new Name: ");
                string newName = Console.ReadLine();
                Console.Write("Enter new Description: ");
                string newDesc = Console.ReadLine();
                Console.Write("Enter new Price: ");
                decimal newPrice = Convert.ToDecimal(Console.ReadLine());
                productDAO.UpdateProduct(pid, newName, newDesc, newPrice);
            }

            private void DeleteProduct()
            {
                Console.Write("Enter Product ID to delete: ");
                int delId = Convert.ToInt32(Console.ReadLine());
                productDAO.DeleteProduct(delId);
            }

            private void ViewProductById()
            {
                Console.Write("Enter Product ID to view: ");
                int viewId = Convert.ToInt32(Console.ReadLine());
                Product prod = productDAO.GetProductById(viewId);
                prod.GetProductDetails();
            }

            private void ViewAllProducts()
            {
                List<Product> plist = productDAO.GetAllProducts();
                foreach (Product item in plist)
                {
                    item.GetProductDetails();
                }
            }




        //ORDER MENU
        public void ShowOrderMenu()
        {
            int choice = -1;
            do
            {
                Console.WriteLine("\n----- Order Management -----");
                Console.WriteLine("1. Add Order");
                Console.WriteLine("2. Update Order Status");
                Console.WriteLine("3. Delete Order");
                Console.WriteLine("4. View Order by ID");
                Console.WriteLine("5. View All Orders");
                Console.WriteLine("6. Back to Main Menu");
                Console.Write("Choose an option: ");
                choice = Convert.ToInt32(Console.ReadLine());

                try
                {
                    switch (choice)
                    {
                        case 1:
                            AddOrder();
                            break;
                        case 2:
                            UpdateOrderStatus();
                            break;
                        case 3:
                            CancelOrder();
                            break;

                        case 4:
                            DeleteOrder();
                            break;
                        case 5:
                            ViewOrderById();
                            break;
                        case 6:
                            ViewAllOrders();
                            break;
                        case 7:
                            Console.WriteLine("Returning to main menu...");
                            break;
                        default:
                            Console.WriteLine("Invalid choice.");
                            break;
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine("Error: " + ex.Message);
                }

            } while (choice != 6);
        }

        private void AddOrder()
        {
            Console.Write("Enter Order ID: ");
            int orderId = Convert.ToInt32(Console.ReadLine());

            Console.Write("Enter Customer ID: ");
            int customerId = Convert.ToInt32(Console.ReadLine());

            Console.Write("Enter Order Date (yyyy-mm-dd): ");
            DateTime orderDate = Convert.ToDateTime(Console.ReadLine());

            Console.Write("Enter Status: ");
            string status = Console.ReadLine();

            Customer customer = customerDAO.GetCustomerById(customerId);
            if (customer == null)
            {
                Console.WriteLine("Customer not found.");
                return;
            }

            Order order = new Order(orderId, customer);
            order.OrderStatus = status;
            orderDAO.AddOrder(order);
            Console.WriteLine("Order added successfully.");
        }

        private void UpdateOrderStatus()
        {
            Console.Write("Enter Order ID to update: ");
            int id = Convert.ToInt32(Console.ReadLine());

            Console.Write("Enter new Status: ");
            string newStatus = Console.ReadLine();

            orderDAO.UpdateOrderStatus(id, newStatus);
            Console.WriteLine("Order status updated successfully.");
        }

        private void DeleteOrder()
        {
            Console.Write("Enter Order ID to delete: ");
            int id = Convert.ToInt32(Console.ReadLine());
            orderDAO.DeleteOrder(id);
            Console.WriteLine("Order deleted successfully.");
        }

        private void CancelOrder()
        {
            Console.Write("Enter Order ID to cancel: ");
            int id = Convert.ToInt32(Console.ReadLine());
            orderDAO.CancelOrder(id);
        }

        private void ViewOrderById()
        {
            Console.Write("Enter Order ID to view: ");
            int id = Convert.ToInt32(Console.ReadLine());
            Order order = orderDAO.GetOrderById(id);
            if (order != null)
            {
                order.GetOrderDetails();
            }
            else
            {
                Console.WriteLine("Order not found.");
            }
        }

        private void ViewAllOrders()
        {
            List<Order> orders = orderDAO.GetAllOrders();
            foreach (Order o in orders)
            {
                o.GetOrderDetails();
            }
        }



        //ORDER DETAIL MENU
        public void ShowOrderDetailMenu()
            {
                int choice = -1;
                do
                {
                    Console.WriteLine("\n----- Order Detail Management -----");
                    Console.WriteLine("1. Add Order Detail");
                    Console.WriteLine("2. Update Order Detail");
                    Console.WriteLine("3. Remove Order Detail");
                    Console.WriteLine("4. View All Order Details");
                    Console.WriteLine("5. View Incomplete Orders");
                    Console.WriteLine("6. View Cancelled Orders");
                    Console.WriteLine("7. Back to Main Menu");
                    Console.Write("Choose an option: ");
                    choice = Convert.ToInt32(Console.ReadLine());

                    try
                    {
                        switch (choice)
                        {
                            case 1:
                                AddOrderDetail();
                                break;
                            case 2:
                                UpdateOrderDetail();
                                break;
                            case 3:
                                RemoveOrderDetail();
                                break;
                            case 4:
                                ViewAllOrderDetails();
                                break;
                            case 5:
                                ViewIncompleteOrders();
                                break;
                            case 6:
                                ViewCancelledOrders();
                                break;
                            case 7:
                                Console.WriteLine("Returning to main menu...");
                                break;
                            default:
                                Console.WriteLine("Invalid choice.");
                                break;
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine("Error: " + ex.Message);
                    }
                } while (choice != 7);
            }

            private void AddOrderDetail()
            {
                Console.Write("Enter Order Detail ID: ");
                int orderDetailID = Convert.ToInt32(Console.ReadLine());
                Console.Write("Enter Order ID: ");
                int orderID = Convert.ToInt32(Console.ReadLine());
                Console.Write("Enter Product ID: ");
                int productID = Convert.ToInt32(Console.ReadLine());
                Product product = productDAO.GetProductById(productID);
                Console.Write("Enter Quantity: ");
                int quantity = Convert.ToInt32(Console.ReadLine());

                Order order = orderDAO.GetOrderById(orderID);

                OrderDetail orderDetail = new OrderDetail(orderDetailID, order, product, quantity);
                orderDetailDAO.AddOrderDetail(orderDetail);
                Console.WriteLine("Order Detail added successfully.");
            }

            private void UpdateOrderDetail()
            {
                Console.Write("Enter Order Detail ID to update: ");
                int orderDetailID = Convert.ToInt32(Console.ReadLine());
                Console.Write("Enter new Quantity: ");
                int newQuantity = Convert.ToInt32(Console.ReadLine());
                Console.Write("Enter new Discount (0 to 1): ");
                decimal newDiscount = Convert.ToDecimal(Console.ReadLine());

                orderDetailDAO.UpdateOrderDetail(orderDetailID, newQuantity, newDiscount);
                Console.WriteLine("Order Detail updated successfully.");
            }

            private void RemoveOrderDetail()
            {
                Console.Write("Enter Order Detail ID to remove: ");
                int orderDetailID = Convert.ToInt32(Console.ReadLine());

                orderDetailDAO.DeleteOrderDetail(orderDetailID);
                Console.WriteLine("Order Detail removed successfully.");
            }

            private void ViewAllOrderDetails()
            {
                List<OrderDetail> orderDetails = orderDetailDAO.GetAllOrderDetails();
                Console.WriteLine("\n----- All Order Details -----");
                foreach (var detail in orderDetails)
                {
                    detail.GetOrderDetailInfo();
                }
            }

            private void ViewIncompleteOrders()
            {

                List<OrderDetail> incompleteOrderDetails = orderDetailDAO.GetAllOrderDetails();
                Console.WriteLine("\n----- Incomplete Orders -----");
                foreach (var detail in incompleteOrderDetails)
                {

                    if (detail.Order.OrderStatus == "Incomplete")
                    {
                        detail.GetOrderDetailInfo();
                    }
                }
            }


            private void ViewCancelledOrders()
            {

                List<OrderDetail> cancelledOrderDetails = orderDetailDAO.GetAllOrderDetails();
                Console.WriteLine("\n----- Cancelled Orders -----");
                foreach (var detail in cancelledOrderDetails)
                {

                    if (detail.Order.OrderStatus == "Cancelled")
                    {
                        detail.GetOrderDetailInfo();
                    }
                }
            }








            // Inventory Management Menu
            private void ShowInventoryMenu()
            {
                int choice = -1;
                do
                {
                    Console.WriteLine("\n----- Inventory Management -----");
                    Console.WriteLine("1. Add Inventory");
                    Console.WriteLine("2. Update Inventory");
                    Console.WriteLine("3. Remove Inventory");
                    Console.WriteLine("4. View All Inventory");
                    Console.WriteLine("5. View Low Stock Products");
                    Console.WriteLine("6. View Out Of Stock Products");
                    Console.WriteLine("7. Back to Main Menu");
                    Console.Write("Choose an option: ");
                    choice = Convert.ToInt32(Console.ReadLine());

                    try
                    {
                        switch (choice)
                        {
                            case 1:
                                AddInventory();
                                break;
                            case 2:
                                UpdateInventory();
                                break;
                            case 3:
                                RemoveInventory();
                                break;
                            case 4:
                                ViewAllInventory();
                                break;
                            case 5:
                                ViewLowStockProducts();
                                break;
                            case 6:
                                ViewOutOfStockProducts();
                                break;
                            case 7:
                                Console.WriteLine("Returning to main menu...");
                                break;
                            default:
                                Console.WriteLine("Invalid choice.");
                                break;
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine("Error: " + ex.Message);
                    }
                } while (choice != 7);
            }

            private void AddInventory()
            {
                Console.Write("Enter Inventory ID: ");
                int inventoryID = Convert.ToInt32(Console.ReadLine());
                Console.Write("Enter Product ID: ");
                int productID = Convert.ToInt32(Console.ReadLine());
                Product product = productDAO.GetProductById(productID);  // Assume GetProductById() is implemented
                Console.Write("Enter Quantity: ");
                int quantity = Convert.ToInt32(Console.ReadLine());

                Inventory inventory = new Inventory(inventoryID, product, quantity);
                inventoryDAO.AddInventory(inventory);
                Console.WriteLine("Inventory added successfully.");
            }

            private void UpdateInventory()
            {
                Console.Write("Enter Inventory ID to update: ");
                int inventoryID = Convert.ToInt32(Console.ReadLine());
                Console.Write("Enter new quantity: ");
                int newQuantity = Convert.ToInt32(Console.ReadLine());

                inventoryDAO.UpdateStock(inventoryID, newQuantity);
                Console.WriteLine("Inventory updated successfully.");
            }

            private void RemoveInventory()
            {
                Console.Write("Enter Inventory ID to remove: ");
                int inventoryID = Convert.ToInt32(Console.ReadLine());

                inventoryDAO.RemoveInventory(inventoryID);
                Console.WriteLine("Inventory removed successfully.");
            }

            private void ViewAllInventory()
            {
                List<Inventory> inventoryList = inventoryDAO.GetAllInventory();
                foreach (Inventory inventory in inventoryList)
                {
                    Console.WriteLine($"Inventory ID: {inventory.InventoryID}, Product: {inventory.Product.ProductName}, Quantity: {inventory.QuantityInStock}");
                }
            }

            private void ViewLowStockProducts()
            {
                Console.Write("Enter stock threshold: ");
                int threshold = Convert.ToInt32(Console.ReadLine());
                List<Inventory> lowStockProducts = inventoryDAO.ListLowStockProducts(threshold);
                foreach (Inventory inventory in lowStockProducts)
                {
                    Console.WriteLine($"Low Stock - Product: {inventory.Product.ProductName}, Quantity: {inventory.QuantityInStock}");
                }
            }

            private void ViewOutOfStockProducts()
            {
                List<Inventory> outOfStockProducts = inventoryDAO.ListOutOfStockProducts();
                foreach (Inventory inventory in outOfStockProducts)
                {
                    Console.WriteLine($"Out of Stock - Product: {inventory.Product.ProductName}");
                }
            }
            public void ShowPaymentMenu()
            {
                int choice = -1;
                do
                {
                    Console.WriteLine("\n----- Payment Management -----");
                    Console.WriteLine("1. Add Payment");
                    Console.WriteLine("2. Update Payment Status");
                    Console.WriteLine("3. Delete Payment");
                    Console.WriteLine("4. View All Payments");
                    Console.WriteLine("5. View Payment by Order ID");
                    Console.WriteLine("6. Back to Main Menu");
                    Console.Write("Choose an option: ");
                    choice = Convert.ToInt32(Console.ReadLine());

                    try
                    {
                        switch (choice)
                        {
                            case 1:
                                AddPayment();
                                break;
                            case 2:
                                UpdatePaymentStatus();
                                break;
                            case 3:
                                DeletePayment();
                                break;
                            case 4:
                                ViewAllPayments();
                                break;
                            case 5:
                                ViewPaymentByOrderId();
                                break;
                            case 6:
                                Console.WriteLine("Returning to main menu...");
                                break;
                            default:
                                Console.WriteLine("Invalid choice.");
                                break;
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine("Error: " + ex.Message);
                    }
                } while (choice != 6);
            }

            private void AddPayment()
            {
                Console.Write("Enter Order ID: ");
                int orderId = Convert.ToInt32(Console.ReadLine());

                Console.Write("Enter Amount Paid: ");
                decimal amount = Convert.ToDecimal(Console.ReadLine());

                Console.Write("Enter Payment Status (e.g., Success, Failed): ");
                string status = Console.ReadLine();

                try
                {
                    Payment payment = new Payment(orderId, amount, status);
                    paymentDAO.AddPayment(payment);
                    Console.WriteLine("Payment added successfully.");
                }
                catch (PaymentFailedException ex)
                {
                    Console.WriteLine("Payment Failed: " + ex.Message);
                }
            }

            private void UpdatePaymentStatus()
            {
                Console.Write("Enter Order ID to update payment status: ");
                int orderId = Convert.ToInt32(Console.ReadLine());

                Console.Write("Enter new payment status (e.g., Success, Failed): ");
                string newStatus = Console.ReadLine();

                try
                {
                    paymentDAO.UpdatePaymentStatus(orderId, newStatus);
                    Console.WriteLine("Payment status updated successfully.");
                }
                catch (PaymentFailedException ex)
                {
                    Console.WriteLine("Error: " + ex.Message);
                }
            }

            private void DeletePayment()
            {
                Console.Write("Enter Order ID to delete payment: ");
                int orderId = Convert.ToInt32(Console.ReadLine());

                try
                {
                    paymentDAO.DeletePayment(orderId);
                    Console.WriteLine("Payment deleted successfully.");
                }
                catch (InvalidDataException ex)
                {
                    Console.WriteLine("Error: " + ex.Message);
                }
            }

            private void ViewAllPayments()
            {
                List<Payment> payments = paymentDAO.GetAllPayments();
                Console.WriteLine("\n----- All Payments -----");
                foreach (Payment payment in payments)
                {
                    payment.DisplayPayment();
                }
            }

            private void ViewPaymentByOrderId()
            {
                Console.Write("Enter Order ID to view payment: ");
                int orderId = Convert.ToInt32(Console.ReadLine());

                try
                {
                    Payment payment = paymentDAO.GetPaymentByOrderId(orderId);
                    payment.DisplayPayment();
                }
                catch (InvalidDataException ex)
                {
                    Console.WriteLine("Error: " + ex.Message);
                }

            }
        }
    }





















